// Utiliser math.div
@use 'sass:math';

// Mixin to declare a font-face with various font sources
@mixin declareFontFace($fontPath, $fontNameFile, $fontName) {
  @font-face {
    font-family: $fontName;
    src: url($fontPath + $fontNameFile + '.woff') format('woff'), url($fontPath + $fontNameFile + '.eot'),
      url($fontPath + $fontNameFile + '.eot?#iefix') format('embedded-opentype'), url($fontPath + $fontNameFile + '.ttf') format('truetype'),
      url($fontPath + $fontNameFile + '.svg') format('svg');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
}

// Pixel to rem
@function toRem($value) {
  $remValue: math.div($value, 16) + rem;
  @return $remValue;
}

// Mixin to handle responsive breakpoints
@mixin breakpoint($breakpoint, $direction: min) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-values: map-get($breakpoints, $breakpoint);
    $breakpoint-min: map-get($breakpoint-values, min);
    $breakpoint-max: map-get($breakpoint-values, max);

    @if $direction == min and $breakpoint-min != null {
      @media (min-width: $breakpoint-min) {
        @content;
      }
    } @else if $direction == max and $breakpoint-max != null {
      @media (max-width: $breakpoint-max) {
        @content;
      }
    }
  } @else {
    @if $direction == min {
      @media (min-width: $breakpoint) {
        @content;
      }
    } @else {
      @media (max-width: $breakpoint) {
        @content;
      }
    }
  }
}
